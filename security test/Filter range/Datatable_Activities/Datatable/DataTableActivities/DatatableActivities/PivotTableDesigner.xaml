<sap:ActivityDesigner x:Class="DatatableActivities.PivotTableDesigner"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sap="clr-namespace:System.Activities.Presentation;assembly=System.Activities.Presentation"
    xmlns:sapv="clr-namespace:System.Activities.Presentation.View;assembly=System.Activities.Presentation"
    xmlns:converters="clr-namespace:System.Activities.Presentation.Converters;assembly=System.Activities.Presentation"
    xmlns:converters1="clr-namespace:DatatableActivities.Converters"
    xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:system="clr-namespace:System;assembly=mscorlib" Loaded="ExtractPagesDesigner_OnLoaded">
    <sap:ActivityDesigner.Resources>
        <ResourceDictionary>
            <converters:ArgumentToExpressionConverter x:Key="ArgumentToExpressionConverter" />
            <converters1:PivotTableConverter x:Key="PivotTableConverter"/>
            <collections:Hashtable x:Key="arrList">
                <system:String x:Key="As Rows">1</system:String>
                <system:String x:Key="As Columns">2</system:String>
                <system:String x:Key="As Values">3</system:String>
                <system:String x:Key="As Filters">4</system:String>
            </collections:Hashtable>

            <collections:Hashtable x:Key="funcList">
                <system:String x:Key="None">0</system:String>
                <system:String x:Key="Sum">1</system:String>
                <system:String x:Key="Count">2</system:String>
                <system:String x:Key="Maximum">3</system:String>
                <system:String x:Key="Minimum">4</system:String>
                <system:String x:Key="Average">5</system:String>
            </collections:Hashtable>
            <Style TargetType="sapv:ExpressionTextBox">
                <Setter Property="Height" Value="25" />
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="HintText" Value="Mention Header Name"/>
                <Setter Property="ExpressionType" Value="system:String"/>
                <Setter Property="OwnerActivity" Value="{Binding ModelItem}"/>
                <Setter Property="sapv:ExpressionTextBox.MaxLines" Value="1"/>
            </Style>
            <Style TargetType="{x:Type DataGridCell}">
                <Setter Property="Height" Value="25"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>
        </ResourceDictionary>

    </sap:ActivityDesigner.Resources>
    <StackPanel Orientation="Vertical">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="Header Name" Width="200" FontWeight="Bold"/>
            <TextBlock Text="Header Areas" Width="100" FontWeight="Bold"/>
            <TextBlock Text="Function" Width="70" FontWeight="Bold"/>
        </StackPanel>
        <ScrollViewer Height="100" >
            <StackPanel Orientation="Horizontal">
                <StackPanel Orientation="Vertical" x:Name="pnlBoxes" Width="200" Background="White">
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput0, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput1, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput2, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput3, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput4, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput5, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput6, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput7, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput8, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput9, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput10, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput11, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput12, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput13, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput14, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput15, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput16, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput17, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput18, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput19, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput20, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput21, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput22, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput23, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput24, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput25, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput26, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput27, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput28, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput29, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput30, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput31, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput32, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput33, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput34, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput35, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput36, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput37, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput38, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput39, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput40, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput41, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput42, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput43, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput44, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                    <sapv:ExpressionTextBox Expression="{Binding ModelItem.StrInput45, Mode=TwoWay, Converter={StaticResource ArgumentToExpressionConverter}, ConverterParameter=In}" />
                </StackPanel>
                <DataGrid Name="CustomGridControl" 
                  ItemsSource="{Binding Path=ModelItem.InputFilters, Mode=TwoWay, Converter={StaticResource PivotTableConverter}}" 
                  AutoGenerateColumns="False" 
                  CanUserAddRows="False" 
                  CanUserDeleteRows="False" 
                  Background="White"
                  GridLinesVisibility="Vertical"
                  HeadersVisibility="None"
                          BorderThickness="0"
                  AlternationCount="1" Margin="0">
                    <DataGrid.Columns>
                        <!--<DataGridTextColumn 
                        Binding="{Binding HeaderName}" 
                        Header="Header Name" Width="100" IsReadOnly="False"/>-->
                        <DataGridComboBoxColumn 
                            Width="100"
                            Header="Header Areas" 
                            SelectedValueBinding="{Binding HeaderAreas}"
                            ItemsSource="{StaticResource arrList}"
                            DisplayMemberPath="Key"
                            SelectedValuePath="Value">
                        </DataGridComboBoxColumn>
                        <DataGridComboBoxColumn 
                            Header="Function" 
                            SelectedValueBinding="{Binding Function}"
                            ItemsSource="{StaticResource funcList}" 
                            DisplayMemberPath="Key" 
                            SelectedValuePath="Value">
                        </DataGridComboBoxColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>
        </ScrollViewer>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="Remove" Click="RemoveCick" Margin="2"/>
            <Button Content="Add" Click="AddClick" Margin="2"/>
        </StackPanel>
    </StackPanel>
</sap:ActivityDesigner>
